import pygame
from sys import exit
import random
import math
from pygame import mixer
mixer.init()

pygame.init()

mixer.music.load("game-over-134053.mp3.crdownload")
mixer.music.play(-1)

# Set up screen dimensions
screen_width = 620
screen_height = 350

screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Flower shooter game")

# Load background image
background = pygame.image.load("360_F_556244850_wd7HG1vSaPXPQ56iIYtEnyGVWcdtQKLF.jpg")

# Initialize player and bullet variables
flowerimg = pygame.transform.scale(pygame.image.load("mini1.png"), (100, 200))
flowerX = 270
flowerY = 200
changeX = 0

bulletimg = pygame.image.load("gunda 3_thumbnail (1).png")
bulletimg = pygame.transform.scale(bulletimg, (40, 40))
check = False
bulletX = 300
bulletY = 260
check = False

# Initialize villain variables
no_of_villians = 7
villians = []
villianX = []
villianY = []

for i in range(no_of_villians):
    villians.append({
        'img': pygame.transform.scale(pygame.image.load("flower ll.png"), (50, 50)),
        'x': random.randint(0, 570),
        'y': random.randint(30, 50),
        'speedX': 0.1,
        'speedY': 45
    })
    villianX.append(villians[i]['x'])
    villianY.append(villians[i]['y'])

# Initialize font for the game over screen
#font_gameover = pygame.font.Font(None, 64)




# Define score variable
score = 0

# Function to display the score
def score_text():
    font = pygame.font.Font(None, 36)
    text = font.render(f"Score: {score}", True, (0, 0, 0))
    screen.blit(text, (10, 10))

def gameover():
   font_gameover = pygame.font.SysFont('Arial', 65, 'Italic')
   img_gameover = font_gameover.render('GAME OVER', True, 'Red')
   screen.blit(img_gameover, (150, 100))


# Main game loop
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            exit()
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                changeX = -1
            if event.key == pygame.K_RIGHT:
                changeX = 1
            if event.key == pygame.K_SPACE:
                if not check:
                    check = True
                    bulletX = flowerX + 25
        if event.type == pygame.KEYUP:
            changeX = 0

    # Update flower position
    flowerX += changeX
    if flowerX <= 0:
        flowerX = 0
    elif flowerX >= 570:
        flowerX = 570

    # Check for collisions with villains and update their positions
    for i in range(no_of_villians):
        # Handle villain movements
        villianX[i] += villians[i]['speedX']
        if villianX[i] <= 0:
            villians[i]['speedX'] = 0.3
            villianY[i] += villians[i]['speedY']
        if villianX[i] >= 570:
            villians[i]['speedX'] = -0.3
            villianY[i] += villians[i]['speedY']

        # Calculate distance for collision detection
        distance = math.sqrt((bulletX - villianX[i]) ** 2 + (bulletY - villianY[i]) ** 2)
        if distance < 27:
            bulletY = 260
            check = False
            villianX[i] = random.randint(0, 570)
            villianY[i] = random.randint(30, 50)
            score += 1
        
         #Check if any villain has reached the game over Y-coordinate (e.g., 200)
        if villianY[i] == 200:
            running = False  # Set the running flag to False to end the game


    # Update bullet position
    if check:
        bulletY -= 0.5

    # Check if the bullet has gone off-screen
    if bulletY <= 0:
        bulletY = 260
        check = False

    
    if villianY[i] >= 150:
       gameover()
       pygame.display.flip()
       pygame.time.delay(3000) # Wait for 3 seconds
       running = False

   

    # Draw game elements
    screen.blit(background, (0, 0))
    screen.blit(flowerimg, (flowerX, flowerY))
    for i in range(no_of_villians):
        screen.blit(villians[i]['img'], (villianX[i], villianY[i]))
    if check:
        screen.blit(bulletimg, (bulletX, bulletY))
    score_text()

    pygame.display.update()
